use nomeDb -> cria uma nova data base porém só é criado de fato quando inserimos dados nele

db. -> me referindo a data base atual


insertOne({}) -> insere um documento, repare que é um document {}
insertMany([]) -> insere varios documentos, repare que é um array []


db.pessoas.insertOne({nome: "Vitor", idade: 28, profissao: "Programador", esta_empregado: true }) -> aqui criamos o que seria uma tabela pra database 'nomeDb'
(repare que é igual uma api, podemos inserir String, Int, bool, isso seria como se fosse uma tabela no SQL)


{
	"acknowledged" : true,
	"insertedId" : ObjectId("61006093334308f0d105c0fa") -> quando aparecer isso é que deu certo e repare que ele nos da um ID, repare que esse ID é como se fosse a PRIMARY_KEY do SQL
}

 
show collections -> mostra as collections criadas (lembre-se as collections é isso 'db.pessoas.insertOne' isso é como se fosse uma tabela no SQL, ou seja aqui criamos a collections 'pessoas')


Criando varios documentos ->
db.pessoas.insertMany([
    {nome: "vitor", idade: 28, profissao: "programador", esta_empregado: true},
    {nome: "Batman", idade: 40, profissao: "heroi", esta_empregado: true},
    {nome: "flash", idade: 37, profissao: "heroi", esta_empregado: false},
    {nome: "aquaman", idade: 42, profissao: "heroi", esta_empregado: false},
]);

vai aparecer isso logo depois do enter ->
{
	"acknowledged" : true,
	"insertedIds" : [
		ObjectId("610063d3334308f0d105c0fc"),
		ObjectId("610063d3334308f0d105c0fd"),
		ObjectId("610063d3334308f0d105c0fe"),
		ObjectId("610063d3334308f0d105c0ff")
	]
}


db.pessoas.find() -> mostra os dados da database atual (porém bagunçãdo)

db.pessoas.find().pretty() -> mostra os dados da database atual (porém tudo organizado como uma api)
